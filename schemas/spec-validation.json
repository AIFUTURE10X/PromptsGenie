{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Specification Validation Schema",
  "description": "Schema for validating generated feature specifications",
  "type": "object",
  "required": [
    "metadata",
    "user_story",
    "acceptance_criteria",
    "risk_assessment"
  ],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["title", "type", "priority", "created_at"],
      "properties": {
        "title": {
          "type": "string",
          "minLength": 10,
          "maxLength": 100,
          "description": "Concise title for the specification"
        },
        "type": {
          "type": "string",
          "enum": ["feature", "bugfix", "refactor", "api", "enhancement"],
          "description": "Type of specification"
        },
        "priority": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"],
          "description": "Priority level"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "author": {
          "type": "string",
          "description": "Author of the specification"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Specification version"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for categorization"
        }
      }
    },
    "feature_overview": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "minLength": 50,
          "maxLength": 500,
          "description": "Brief feature summary"
        },
        "business_value": {
          "type": "string",
          "minLength": 30,
          "description": "Business value proposition"
        },
        "success_metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["metric", "target", "measurement"],
            "properties": {
              "metric": {
                "type": "string",
                "description": "Name of the metric"
              },
              "target": {
                "type": "string",
                "description": "Target value"
              },
              "measurement": {
                "type": "string",
                "description": "How to measure"
              }
            }
          },
          "minItems": 1
        }
      }
    },
    "user_story": {
      "type": "object",
      "required": ["as_a", "i_want", "so_that"],
      "properties": {
        "as_a": {
          "type": "string",
          "minLength": 5,
          "description": "User type or persona"
        },
        "i_want": {
          "type": "string",
          "minLength": 10,
          "description": "What the user wants to accomplish"
        },
        "so_that": {
          "type": "string",
          "minLength": 10,
          "description": "Why the user wants this"
        },
        "personas": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "description", "goals"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Persona name"
              },
              "description": {
                "type": "string",
                "description": "Persona description"
              },
              "goals": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Persona goals"
              }
            }
          }
        },
        "user_journey": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["step", "action", "outcome"],
            "properties": {
              "step": {
                "type": "integer",
                "description": "Step number"
              },
              "action": {
                "type": "string",
                "description": "User action"
              },
              "outcome": {
                "type": "string",
                "description": "Expected outcome"
              }
            }
          }
        }
      }
    },
    "acceptance_criteria": {
      "type": "object",
      "required": ["functional_requirements", "scenarios"],
      "properties": {
        "functional_requirements": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "List of functional requirements"
        },
        "scenarios": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "given", "when", "then"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Scenario name"
              },
              "given": {
                "type": "string",
                "description": "Initial conditions"
              },
              "when": {
                "type": "string",
                "description": "User action"
              },
              "then": {
                "type": "string",
                "description": "Expected outcome"
              }
            }
          },
          "minItems": 1
        },
        "edge_cases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Edge cases to consider"
        }
      }
    },
    "api_contract": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["method", "path", "description"],
            "properties": {
              "method": {
                "type": "string",
                "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
                "description": "HTTP method"
              },
              "path": {
                "type": "string",
                "pattern": "^/",
                "description": "API endpoint path"
              },
              "description": {
                "type": "string",
                "description": "Endpoint description"
              },
              "request_schema": {
                "type": "object",
                "description": "Request schema"
              },
              "response_schema": {
                "type": "object",
                "description": "Response schema"
              },
              "error_responses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["status", "description"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "minimum": 400,
                      "maximum": 599
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "breaking_changes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Breaking changes introduced"
        }
      }
    },
    "ui_design": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "type", "props"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Component name"
              },
              "type": {
                "type": "string",
                "description": "Component type"
              },
              "props": {
                "type": "object",
                "description": "Component props"
              }
            }
          }
        },
        "interaction_patterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User interaction patterns"
        },
        "accessibility_requirements": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Accessibility requirements"
        }
      }
    },
    "data_model": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "fields"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Entity name"
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "validation": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "migrations": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["type", "description"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["create", "alter", "drop", "index"]
              },
              "description": {
                "type": "string"
              },
              "sql": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "non_functional_requirements": {
      "type": "object",
      "properties": {
        "performance": {
          "type": "object",
          "properties": {
            "response_time": {
              "type": "string",
              "description": "Maximum response time"
            },
            "throughput": {
              "type": "string",
              "description": "Required throughput"
            },
            "load_capacity": {
              "type": "string",
              "description": "Load capacity requirements"
            }
          }
        },
        "security": {
          "type": "object",
          "properties": {
            "authentication": {
              "type": "string",
              "description": "Authentication requirements"
            },
            "authorization": {
              "type": "string",
              "description": "Authorization requirements"
            },
            "data_protection": {
              "type": "string",
              "description": "Data protection requirements"
            }
          }
        },
        "scalability": {
          "type": "object",
          "properties": {
            "horizontal_scaling": {
              "type": "string",
              "description": "Horizontal scaling requirements"
            },
            "vertical_scaling": {
              "type": "string",
              "description": "Vertical scaling requirements"
            }
          }
        },
        "accessibility": {
          "type": "object",
          "properties": {
            "wcag_level": {
              "type": "string",
              "enum": ["A", "AA", "AAA"],
              "description": "WCAG compliance level"
            },
            "screen_reader": {
              "type": "boolean",
              "description": "Screen reader support required"
            },
            "keyboard_navigation": {
              "type": "boolean",
              "description": "Keyboard navigation support required"
            }
          }
        }
      }
    },
    "risk_assessment": {
      "type": "object",
      "required": ["technical_risks", "business_risks", "mitigation_strategies"],
      "properties": {
        "technical_risks": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["risk", "probability", "impact", "severity"],
            "properties": {
              "risk": {
                "type": "string",
                "description": "Risk description"
              },
              "probability": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "description": "Probability of occurrence"
              },
              "impact": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "description": "Impact if it occurs"
              },
              "severity": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Overall severity"
              }
            }
          },
          "minItems": 1
        },
        "business_risks": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["risk", "probability", "impact"],
            "properties": {
              "risk": {
                "type": "string"
              },
              "probability": {
                "type": "string",
                "enum": ["low", "medium", "high"]
              },
              "impact": {
                "type": "string",
                "enum": ["low", "medium", "high"]
              }
            }
          }
        },
        "mitigation_strategies": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["strategy", "effectiveness"],
            "properties": {
              "strategy": {
                "type": "string",
                "description": "Mitigation strategy"
              },
              "effectiveness": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "description": "Strategy effectiveness"
              }
            }
          },
          "minItems": 1
        },
        "rollback_plan": {
          "type": "object",
          "required": ["steps", "time_estimate"],
          "properties": {
            "steps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "time_estimate": {
              "type": "string",
              "description": "Estimated time for rollback"
            },
            "data_recovery": {
              "type": "string",
              "description": "Data recovery strategy"
            }
          }
        }
      }
    },
    "implementation_plan": {
      "type": "object",
      "properties": {
        "phases": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "description", "deliverables"],
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deliverables": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "duration": {
                "type": "string"
              }
            }
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "type"],
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["internal", "external", "technical", "business"]
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "testing_strategy": {
          "type": "object",
          "properties": {
            "unit_tests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "integration_tests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "e2e_tests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "performance_tests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}