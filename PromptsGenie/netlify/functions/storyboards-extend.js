exports.handler = async (event, context) => {
  // Handle CORS preflight
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'POST, OPTIONS'
      },
      body: ''
    };
  }

  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      },
      body: JSON.stringify({ error: 'Method not allowed' })
    };
  }

  try {
    const { storyboardId, extraFrames, currentFrames } = JSON.parse(event.body);

    if (!storyboardId || !Array.isArray(extraFrames) || extraFrames.length === 0 || !Array.isArray(currentFrames)) {
      return {
        statusCode: 400,
        headers: {
          'Content-Type': 'application/json',
          'Access-Control-Allow-Origin': '*'
        },
        body: JSON.stringify({
          error: 'Invalid extend request. Must include storyboardId, extraFrames array, and currentFrames array.'
        })
      };
    }

    // Generate new frame objects
    const newFrames = extraFrames.map((frame, i) => ({
      id: `frame_${currentFrames.length + i + 1}`,
      title: `Scene ${currentFrames.length + i + 1}`,
      description: frame.description || `Frame ${currentFrames.length + i + 1}`,
      image_url: null // Will be generated by client calling generate-frame
    }));

    // Return extended storyboard
    return {
      statusCode: 200,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      },
      body: JSON.stringify({
        storyboardId,
        frames: [...currentFrames, ...newFrames]
      })
    };
  } catch (error) {
    console.error('Storyboard extension failed:', error);
    return {
      statusCode: 500,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      },
      body: JSON.stringify({ error: error.message })
    };
  }
};
